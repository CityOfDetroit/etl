# Add geometry and make a point for new incidents
- type: sql
  statements:
    - alter table crimescape.rms_update rename column "Address" to address
    - alter table crimescape.rms_update rename column "DPDCRIMEID" to dpdcrimeid
    - alter table crimescape.rms_update rename column "Case ID" to case_id
    - alter table crimescape.rms_update add column uniq serial primary key
    - select AddGeometryColumn( 'crimescape', 'rms_update', 'geom', 2898, 'POINT', 2)
    - create index if not exists etl_rms_update_geom_idx on crimescape.rms_update using gist(geom)
    - create index if not exists rms_update_dpdcrimeid_idx on crimescape.rms_update using btree(dpdcrimeid)
    - create index if not exists rms_dpdcrimeid_idx on crimescape.rms using btree(dpdcrimeid)
    - create index if not exists rms_caseid_idx on crimescape.rms using btree(case_id)
    - create index if not exists rms_update_addr_idx on crimescape.rms_update using btree(address)
    - update crimescape.rms_update set geom = st_setsrid(st_makepoint(geox/100, geoy/100), 2898) where geox > 0 and geoy > 0
    - drop table if exists crimescape.rms_old cascade
    - alter table crimescape.rms rename to rms_old
    - alter table crimescape.rms_update rename to rms

# Make views
- type: create_view
  view_name: rms_sftp
  as: select
        uniq,
        dpdcrimeid::text as crime_id,
        "Report Number" as report_number,
        address,
        "Offense Description" as offense_description,
        "Offense Category" as offense_category,
        "State Offense Code" as state_offense_code,
        trim(r.arr_chrg) as arrest_charge,
        r.chrgdesc as charge_description,
        replace(to_char(concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as incident_timestamp,
        "Incident Time" as incident_time,
        (extract(dow from concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp) + 1)::integer as day_of_week,
        left("Incident Time", 2)::integer as hour_of_day,
        right("Incident Date", 4)::integer as year,
        "Scout Car Area" as scout_car_area,
        "Precinct" as precinct,
        ST_X(ST_Transform(geom, 4326)) as longitude,
        ST_Y(ST_Transform(geom, 4326)) as latitude,
        (select makeSocrataDate(ibr_date::timestamp))as ibr_date,
        c.lwchrgid as primary_key,
        (select makeSocrataLocation(geom)) as location,
        (select s.descriptn from crimescape.systab2 s where c.premise1 = s.code_sbi and s.code_key = 'LOTP') as location_type,
        case 
          when regexp_replace(regexp_replace(n.rel2offnd,',[1-9]',',','g'),'^[1]','') like any (array['%01%','%02%','%13%','%33%','%34%','%24%','%26%','%32%']) then 'IPV'
          when regexp_replace(regexp_replace(n.rel2offnd,',[1-9]',',','g'),'^[1]','') like any (array['%05%','%10%','%25%','%07%','%04%','%11%','%03%','%09%','%06%','%08%','%12%','%20%']) then 'DV'
          when regexp_replace(regexp_replace(n.rel2offnd,',[1-9]',',','g'),'^[1]','') like any (array['%23%','%21%','%22%','%28%','%29%','%30%','%18%','%98%','%99%','%31%']) then 'OTH'
          else n.rel2offnd
        end as ranked_relationship_to_offender
      from crimescape.rms r
        left outer join crimescape.lwnames n on n.lwmainid = r.case_id
        left outer join crimescape.lwchrg c on c.lwmainid = r.case_id
      where "Incident Date"::date >= date '2016-12-06'

# De-dupe incidents after joining to multiple charges/victims
- type: create_view
  view_name: rms_sftp_grouped
  as: select * from crimescape.rms_sftp
      group by
        uniq,
        crime_id,
        report_number,
        address,
        offense_description,
        offense_category,
        state_offense_code,
        arrest_charge,
        charge_description,
        incident_timestamp,
        incident_time,
        day_of_week,
        hour_of_day,
        year,
        scout_car_area,
        precinct,
        latitude,
        longitude,
        ibr_date,
        primary_key,
        location,
        location_type,
        ranked_relationship_to_offender

# Copy the view to a csv
- type: sql
  statements:
    - copy ( select * from crimescape.rms_sftp_grouped ) to '/tmp/rms.csv' delimiter ',' csv header
