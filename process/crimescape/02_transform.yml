# # RMS: Add geometry and make a point for new incidents
- type: sql
  statements:
    - alter table crimescape.rms_update rename column "Address" to address
    - alter table crimescape.rms_update rename column "DPDCRIMEID" to dpdcrimeid
    - alter table crimescape.rms_update rename column "Case ID" to case_id
    - alter table crimescape.rms_update add column uniq serial primary key
    - select AddGeometryColumn('crimescape', 'rms_update', 'geom', 2898, 'POINT', 2)
    - create index if not exists etl_rms_update_geom_idx on crimescape.rms_update using gist(geom)
    - create index if not exists rms_update_dpdcrimeid_idx on crimescape.rms_update using btree(dpdcrimeid)
    - create index if not exists rms_dpdcrimeid_idx on crimescape.rms_update using btree(dpdcrimeid)
    - create index if not exists rms_caseid_idx on crimescape.rms_update using btree(case_id)
    - create index if not exists rms_update_addr_idx on crimescape.rms_update using btree(address)
    - update crimescape.rms_update set geom = case when geox > 0 and geoy > 0 then st_setsrid(st_makepoint(geox/100, geoy/100), 2898) else null end

# RMS: Create view
- type: sql
  statements:
  - drop table if exists crimescape.rms_old cascade
  - alter table crimescape.rms rename to rms_old
  - alter table crimescape.rms_update rename to rms
  - drop view if exists crimescape.rms_sftp
  - create view crimescape.rms_sftp as ( 
      select
        uniq,
        dpdcrimeid::text as crime_id,
        "Report Number" as report_number,
        address,
        "Offense Description" as offense_description,
        "Offense Category" as offense_category,
        "State Offense Code" as state_offense_code,
        trim(r.arr_chrg) as arrest_charge,
        r.chrgdesc as charge_description,
        replace(to_char(concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as incident_timestamp,
        "Incident Time" as incident_time,
        (extract(dow from concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp) + 1)::integer as day_of_week,
        left("Incident Time", 2)::integer as hour_of_day,
        right("Incident Date", 4)::integer as year,
        "Scout Car Area" as scout_car_area,
        "Precinct" as precinct,
        ST_X(ST_Transform(geom, 4326)) as longitude,
        ST_Y(ST_Transform(geom, 4326)) as latitude,
        replace(to_char(ibr_date::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as ibr_date,
        c.lwchrgid as primary_key,
        CASE
          WHEN geom is null
            THEN null
          ELSE
            concat(
              'location (',
              ST_Y(ST_Transform(geom, 4326)),
              ',',
              ST_X(ST_Transform(geom, 4326)),
              ')'
            )
        END as location,
        (select s.descriptn from crimescape.systab2 s where c.premise1 = s.code_sbi and s.code_key = 'LOTP') as location_type,
        case 
          when regexp_replace(regexp_replace(n.rel2offnd,',[1-9]',',','g'),'^[1]','') like any (array['%01%','%02%','%13%','%33%','%34%','%24%','%26%','%32%']) then 'IPV'
          when regexp_replace(regexp_replace(n.rel2offnd,',[1-9]',',','g'),'^[1]','') like any (array['%05%','%10%','%25%','%07%','%04%','%11%','%03%','%09%','%06%','%08%','%12%','%20%']) then 'DV'
          when regexp_replace(regexp_replace(n.rel2offnd,',[1-9]',',','g'),'^[1]','') like any (array['%23%','%21%','%22%','%28%','%29%','%30%','%18%','%98%','%99%','%31%']) then 'OTH'
          else n.rel2offnd
        end as ranked_relationship_to_offender,
        c."addtime" as charge_addtime
        from crimescape.rms r
          left outer join crimescape.lwnames n on n.lwmainid = r.case_id
          left outer join crimescape.lwchrg c on (c.lwmainid = r.case_id and c.arr_chrg = r.arr_chrg)
        where "Incident Date"::date >= date '2016-12-06' )
  - drop view if exists crimescape.rms_sftp_grouped
  - create view crimescape.rms_sftp_grouped as (
      select * from crimescape.rms_sftp
      group by
        uniq,
        crime_id,
        report_number,
        address,
        offense_description,
        offense_category,
        state_offense_code,
        arrest_charge,
        charge_description,
        incident_timestamp,
        incident_time,
        day_of_week,
        hour_of_day,
        year,
        scout_car_area,
        precinct,
        latitude,
        longitude,
        ibr_date,
        primary_key,
        location,
        location_type,
        ranked_relationship_to_offender,
        charge_addtime )

# RMS: Copy the view to a csv
- type: sql
  statements:
  - copy ( select * from crimescape.rms_sftp_grouped ) to '/tmp/rms.csv' delimiter ',' csv header

# CAD: Initial address string clean up
- type: sql
  statements:
    - alter table crimescape.cad_update add column if not exists is_anon boolean
    - update crimescape.cad_update set is_anon = 'f'

# CAD: Assign street addresses for known places, removing text like "MGM Casino"
- type: lookup
  table: crimescape.cad_update
  lookup_field: incident_address
  file: /home/gisteam/etl/process/cad/misfits_lookup.csv
  match_field: geoc_address
  method: match
  set_flag: false

# CAD: Add geometry
- type: sql
  statements:
    - select AddGeometryColumn('crimescape', 'cad_update', 'geom', 2898, 'POINT', 2)
    - create index etl_cad_update_geom_idx on crimescape.cad_update using gist(geom)
    - update crimescape.cad_update set geom = case when geox > 0 and geoy > 0 then st_setsrid(st_makepoint(geox, geoy), 2898) else null end
# CAD: Create view
- type: sql
  statements:
    - alter table crimescape.cad_update drop column if exists geox
    - alter table crimescape.cad_update drop column if exists geoy
    - alter table crimescape.cad_update drop column if exists is_anon
    - alter table crimescape.cad_update drop column if exists notes
    - insert into crimescape.cad (select * from crimescape.cad_update)
    - drop table if exists crimescape.cad_update
    - drop view if exists crimescape.cad_sftp
    - create view crimescape.cad_sftp as (
        select 
          inci_id as incident_id,
          agency,
          incident_address,
          zip as zip_code,
          priority,
          callcode,
          calldescription,
          category,
          replace(to_char(concat(calldate, ' ', dp_calltime)::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as call_timestamp,
          dp_calltime as time_of_call,
          "precinctSCA" as precinct_sca,
          respondingunit,
          officerinitiated,
          replace(intaketime, ',', '') as intaketime,
          replace(dispatchtime, ',', '') as dispatchtime,
          replace(traveltime, ',', '') as traveltime,
          replace(totalresponsetime, ',', '') as totalresponsetime,
          replace(timeonscene, ',', '') as time_on_scene,
          replace(totaltime, ',', '') as totaltime,
          ST_X(ST_Transform(geom, 4326)) as lon,
          ST_Y(ST_Transform(geom, 4326)) as lat,
          CASE 
            WHEN geom is null 
              THEN null 
            ELSE 
              concat(
                'location (', 
                ST_Y(ST_Transform(geom, 4326)), 
                ',', 
                ST_X(ST_Transform(geom, 4326)), 
                ')'
              ) 
          END as location 
          from crimescape.cad
          where "CallDateDate" >= date '2016-09-20'
      )

# CAD: Copy the data to a csv
- type: sql
  statements:
  - copy ( select * from crimescape.cad_sftp ) to '/tmp/cad.csv' delimiter ',' csv header;

# AVL: Create view
- type: sql
  statements:
  - insert into crimescape.avl (select * from crimescape.avl_update);
  - drop table if exists crimescape.avl_update;
  - drop view if exists crimescape.avl_sftp;
  - create view crimescape.avl_sftp as (
      select
        avllogid,
        timestamp,
        unitcode,
        agency,
        vehicleid,
        unitperid,
        inci_id,
        status,
        avstatus,
        geox,
        geoy,
        speed,
        heading,
        isradio,
        emequipact,
        isaircraft
      from crimescape.avl
      where agency = 'DPD '
      and timestamp >= date '2016-12-15' 
    )

# AVL: Copy to csv
- type: sql
  statements:
  - copy ( select * from crimescape.avl_sftp ) to '/tmp/avl.csv' delimiter ',' csv header;
