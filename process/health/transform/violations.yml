- type: create_table
  table_name: violations
  as: select 
        d.inspectionid,
        i.date as inspectiondate,
        i.inspection_type,
        i.establishmentid,
        i.name,
        violation,
        (select v.description from health.violate v where replace(d.viorecordid, '.0', '')::bigint = v.recordid) as violation_description,
        case 
          when pcf = 'P' then 'Priority'
          when pcf = 'C' then 'Core'
          when pcf = 'F' then 'Foundation'
          else null
        end as violation_type,
        case
          when critical::text = 'true' then 'Yes'
          when critical::text = 'false' then 'No'
          else null
        end as critical,
        case
          when corrected::text = 'true' then 'Yes'
          when corrected::text = 'false' then 'No'
          else null
        end as corrected,
        datecorrected::timestamp
      from health.idetail d
        inner join health.inspections i on i.inspectionid::text = replace(d.inspectionid, '.0', '')
      where replace(d.inspectionid, '.0', '') in (select inspectionid::text from health.inspections)

- type: create_view
  view_name: violations_socrata
  as: select
        inspectionid,
        (select makeSocrataDate(inspectiondate)) as inspection_date,
        inspection_type,
        establishmentid,
        name,
        violation as violation_code,
        violation_description,
        violation_type,
        critical as critical_violation_type,
        corrected,
        (select makeSocrataDate(datecorrected)) as corrected_date
      from health.violations
      order by inspectiondate desc, name asc

- type: create_table
  table_name: violations_gql
  as: select
        replace(inspectionid, '.0', '')::bigint as inspectionid,
        inspectiondate as inspection_date,
        inspection_type,
        replace(establishmentid, '.0', '')::bigint as establishmentid,
        name,
        violation as violation_code,
        violation_description,
        violation_type,
        critical as critical_violation_type,
        corrected,
        datecorrected as corrected_date
      from health.violations
      order by inspectiondate desc, name asc
