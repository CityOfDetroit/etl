- type: create_table
  table_name: violations
  as: select 
        d.inspectionid,
        i.date as inspectiondate,
        (select description from health.instype t where t.recordid::text = replace(i.type, '.0', '')) as inspection_type,
        i.establishmentid,
        (select name from health.estinfo e where e.recordid = i.establishmentid) as name,
        violation,
        (select v.description from health.violate v where replace(d.viorecordid, '.0', '')::bigint = v.recordid) as violation_description,
        case 
          when pcf = 'P' then 'Priority'
          when pcf = 'C' then 'Core'
          when pcf = 'F' then 'Foundation'
          else null
        end as violation_type,
        case
          when critical::text = 'true' then 'Yes'
          when critical::text = 'false' then 'No'
          else null
        end as critical,
        (select ml.description from health.mstrlist ml where replace((select ii.item from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as item1,
        (select ml.description from health.mstrlist ml where replace((select ii.itemdt from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as item2,
        (select ml.description from health.mstrlist ml where replace((select ii.itemdtii from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as item3,
        (select ml.description from health.mstrlist ml where replace((select ii.problem from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as problem1,
        (select ml.description from health.mstrlist ml where replace((select ii.probdt from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as problem2,
        (select ml.description from health.mstrlist ml where replace((select ii.probdtii from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as problem3,
        (select ml.description from health.mstrlist ml where replace((select ii.location from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as location1,
        (select ml.description from health.mstrlist ml where replace((select ii.locdet from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as location2,
        (select ml.description from health.mstrlist ml where replace(d.inspectarea, '.0', '') = ml.recordid::text limit 1) as inspectarea,
        case
          when corrected::text = 'true' then 'Yes'
          when corrected::text = 'false' and pcf in ('P', 'F') then 'No'
          when corrected::text = 'false' and pcf = 'C' then 'Not required'
          else null
        end as corrected,
        (select v.correctiondays from health.violate v where replace(d.viorecordid, '.0', '') = v.recordid::text)::numeric as days_to_correct,
        datecorrected::timestamp,
        (select ml.description from health.mstrlist ml where replace((select ii.correction from health.iitem ii where d.recordid::text = replace(ii.idetailid, '.0', '') limit 1), '.0', '') = ml.recordid::text limit 1) as correction_description
      from health.idetail d
        inner join health.iheader i on i.inspectionid::text = replace(d.inspectionid, '.0', '')
      where i.date::timestamp between date '2016-08-01' and date_trunc('month', now()) - interval '1 DAY'

- type: create_view
  view_name: violations_socrata
  as: select
        inspectionid,
        (select makeSocrataDate(inspectiondate::timestamp)) as inspection_date,
        case 
          when inspection_type like any (array['%FBI%', '%Food Borne%']) then 'Complaint'
          else inspection_type
        end as inspection_type,
        establishmentid,
        name,
        violation as violation_code,
        violation_description,
        violation_type,
        critical as critical_violation_type,
        item1 as item_description,
        concat_ws(' ', item2, item3) as sub_item,
        problem1 as problem_description,
        concat_ws(' ', problem2, problem3) as sub_problem,
        inspectarea as location,
        concat_ws(' ', location1, location2) as sub_location,
        corrected,
        days_to_correct::text,
        (select makeSocrataDate(datecorrected::timestamp)) as corrected_date,
        correction_description
      from health.violations
      where inspection_type not in ('Compliance Insp.', 'Compliance Insp./FO', 'Other', 'Site Check', 'Vending', 'STFU Operational', 'CoO Site Check')
      order by inspectiondate::timestamp desc, name asc

- type: create_table
  table_name: violations_gql
  as: select
        replace(inspectionid::text, '.0', '') as inspectionid,
        inspectiondate as inspection_date,
        case 
          when inspection_type like any (array['%FBI%', '%Food Borne%']) then 'Complaint'
          else inspection_type
        end as inspection_type,
        replace(establishmentid::text, '.0', '') as establishmentid,
        name,
        violation as violation_code,
        violation_description,
        violation_type,
        critical as critical_violation_type,
        item1 as item_description,
        concat_ws(' ', item2, item3) as sub_item,
        problem1 as problem_description,
        concat_ws(' ', problem2, problem3) as sub_problem,
        inspectarea as location,
        concat_ws(' ', location1, location2) as sub_location,
        corrected,
        days_to_correct,
        datecorrected as corrected_date,
        correction_description
      from health.violations
      where inspection_type not in ('Compliance Insp.', 'Compliance Insp./FO', 'Other', 'Site Check', 'Vending', 'STFU Operational', 'CoO Site Check')
      order by inspectiondate::timestamp desc, name asc