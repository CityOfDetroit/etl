- type: sql
  statements: 
  - create index estinfo_recordid_idx on health.estinfo (recordid)
  - create index zip_recordid_idx on health.zipcode (recordid)
  - create index etype_recordid_idx on health.etype (recordid)
  - create index estatus_recordid_idx on health.estatus (recordid)
  - create index riskcategory_recordid_idx on health.riskcategory (recordid)

- type: create_table
  table_name: establishments
  as: select 
        e.recordid,
        name,
        trim(trailing '.' from regexp_replace(address1, '\.','')) as address,
        (select rtrim(z.zipcode, '-0000') from health.zipcode z where z.recordid::text = rtrim(e.zip, '.0')) as zipcode,
        owner,
        license,
        lictype,
        (select t.description from health.etype t where t.recordid::text = rtrim(e.type, '.0')) as establishment_type,
        (select es.description from health.estatus es where es.recordid::text = rtrim(e.status, '.0')) as establishment_status,
        (select r.description from health.riskcategory r where r.recordid::text = (select substring(e.riskfactor, 1, 1))) as complexity,
        lastinspection::timestamp,
        nextinspection::timestamp,
        reviewfrequency,
        i.inspectionid as last_inspectionid
      from health.estinfo e
        left outer join health.iheader i where i.establishmentid = e.recordid
      where lastinspection::timestamp >= date '2016-01-01'

- type: geocode
  table: health.establishments
  add_col: address
  geom_col: geom

- type: create_view
  view_name: establishments_socrata
  as: select
        recordid as establishmentid,
        name,
        address,
        zipcode,
        owner,
        license as licensenum,
        lictype,
        establishment_type,
        initcap(establishment_status),
        case
          when complexity = 'Z' then 'High risk'
          when complexity = 'Y' then 'Medium risk'
          when complexity = 'X' then 'Low risk'
          else null
        end as risk_category,
        (select makeSocrataLocation(geom)) as location
      from health.establishments
