- type: sql
  statements:
    - alter table pubsafe.cad_update add column if not exists is_anon boolean
    - update pubsafe.cad_update set is_anon = 'f'
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'DETROIT$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'ALLE$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'DEAR$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'DEARBORN$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'ECOR$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'FERN$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'GROS$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'HAMT$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'HAZE$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'HIGH$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'REDF$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'RIVE$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'ROYA$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'SOUT$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'WARR$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, 'APT[\s#A-Za-z0-9]+$', ''))
    - update pubsafe.cad_update set incident_address = trim(regexp_replace(incident_address, '[\s]{2,}', ''))
- type: lookup
  table: pubsafe.cad_update
  lookup_field: incident_address
  file: process/cad_rms/misfits_lookup.csv
  match_field: geoc_address
  method: match
  set_flag: false
- type: lookup
  table: pubsafe.cad_update
  lookup_field: incident_address
  file: process/cad_rms/misfits_lookup.csv
  match_field: anon_return
  method: match
  set_flag: true
- type: lookup
  table: pubsafe.cad_update
  lookup_field: incident_address
  file: process/cad_rms/redacted_lookup.csv
  match_field: new
  method: contains
  set_flag: true

# Add geometry here
- type: sql
  statements:
    - select AddGeometryColumn('pubsafe', 'cad_update', 'geom', 2898, 'POINT', 2)
    - create index etl_cad_update_geom_idx on pubsafe.cad_update using gist(geom)
    - update pubsafe.cad_update set geom = st_setsrid(st_makepoint(geox, geoy), 2898) where geox > 0 and geoy > 0

# Stamp with District/Neighborhood/Block/ZipCode
- type: sql
  statements:
    - alter table pubsafe.cad_update add column block_id varchar(50);
    - update pubsafe.cad_update r set block_id = b.geoid10 from base.blocks_2010 b where st_contains(b.geom, r.geom);
    - alter table pubsafe.cad_update add column neighborhood varchar(100);
    - update pubsafe.cad_update r set neighborhood = n.name from base.neighborhoods n where st_contains(n.wkb_geometry, r.geom);
    - alter table pubsafe.cad_update add column council_district integer;
    - update pubsafe.cad_update r set council_district = d.districts::integer from base.council_districts d where st_contains(d.wkb_geometry, r.geom);

# Fuzz text location
- type: anonymize_text_location
  table: pubsafe.cad_update
  column: incident_address
  set_flag: True

# Fuzz geometry
- type: anonymize_geometry
  table: pubsafe.cad_update
  against: base.centerline

- type: sql
  statements:
    - update pubsafe.cad_update set incident_address = 'Location Redacted' where is_anon = 'f'
    - alter table pubsafe.cad_update drop column if exists geox
    - alter table pubsafe.cad_update drop column if exists geoy
    - alter table pubsafe.cad_update drop column if exists is_anon
    - alter table pubsafe.cad_update drop column if exists notes
    - insert into pubsafe.cad (select * from pubsafe.cad_update)
    - drop table if exists pubsafe.cad_update
    - drop view if exists pubsafe.cad_socrata
    - create view pubsafe.cad_socrata as (
        select 
          inci_id as incident_id,
          agency,
          incident_address,
          zip as zip_code,
          priority,
          callcode,
          calldescription,
          category,
          replace(to_char(concat(calldate, ' ', dp_calltime)::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as call_timestamp,
          dp_calltime as time_of_call,
          "precinctSCA" as precinct_sca,
          respondingunit,
          officerinitiated,
          replace(intaketime, ',', '') as intaketime,
          replace(dispatchtime, ',', '') as dispatchtime,
          replace(traveltime, ',', '') as traveltime,
          replace(totalresponsetime, ',', '') as totalresponsetime,
          replace(timeonscene, ',', '') as time_on_scene,
          replace(totaltime, ',', '') as totaltime,
          neighborhood,
          block_id,
          council_district,
          ST_X(ST_Transform(geom, 4326)) as lon,
          ST_Y(ST_Transform(geom, 4326)) as lat,
          CASE 
            WHEN geom is null 
              THEN null 
            ELSE 
              concat(
                'location (', 
                ST_Y(ST_Transform(geom, 4326)), 
                ',', 
                ST_X(ST_Transform(geom, 4326)), 
                ')'
              ) 
          END as location from pubsafe.cad
      )

