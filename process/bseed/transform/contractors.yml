- type: sql
  statements:
    - create index if not exists bseed_casepeople_peopleid_idx on bseed.tm_casepeople using btree(people_id)
    - create index if not exists bseed_currentlicense_crllicenseno_idx on bseed.current_license using btree(crl_license_no)
    - create index if not exists bseed_currentlicense_peopleid_idx on bseed.current_license using btree(people_id)
    - create index if not exists bseed_caselic_caseno_idx on bseed.case_lic using btree(csm_caseno)
    - create index if not exists bseed_peoplecomm_peopleid_idx on bseed.people_comm using btree(people_id)
    - create index if not exists bseed_caselicreg_caseno_idx on bseed.case_lic_reg using btree(csm_caseno)

- type: create_view
  view_name: registered_contractors_socrata
  as: select
        cl.role_type,
        cl.license_type as license_type_unused,
        (select lt.license_desc from bseed.license_type lt where cl.license_type = lt.license_type) as license_type_desc,
        clr.reg_licreg as license_type,
        (select makeSocrataDate(cl.crl_exp_date)) as crl_exp_date,
        l.lic_masname,
        (select trim(concat_ws(', ', cp.csp_first_name, cp.csp_last_name)) as company_name from bseed.tm_casepeople cp where cp.people_id = cl.people_id and cp.role_type = 'CON' and cp.csp_primary = 'Y' order by cp.csp_updated desc limit 1) as company_name,
        l.csm_caseno,
        pc.pco_comm_detail
      from bseed.current_license cl
        inner join bseed.case_lic l on cl.crl_license_no = l.csm_caseno
        inner join bseed.case_lic_reg clr on cl.crl_license_no = clr.csm_caseno
        inner join bseed.people_comm pc on cl.people_id = pc.people_id
      where pc.pco_comm_type = 'PH1'
        and cl.crl_exp_date >= now()
        and cl.role_type = 'CON'
