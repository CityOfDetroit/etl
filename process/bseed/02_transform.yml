# Annual Inspections
- type: sql
  statements:
      - drop table if exists bseed.annual_inspections cascade
      - create table bseed.annual_inspections as (
            select
            i.action_date, 
            i.action_description,
            i.csa_disp as result,
            i.csm_caseno as case_number,
            pn.cleaned as parcel_assess,
            concat_ws(' ', cm.csm_name_first, cm.csm_name_last) as owner,
            cm.csm_projname as project_name,
            concat_ws(' ', i.csm_st_nmbr, i.csm_st_pfx, i.csm_st_name) as address
            from bseed.tm_inspections i
            inner join bseed.tm_casemain cm on i.csm_caseno = cm.csm_caseno
            inner join bseed.pnum_lookup pn on cm.prc_parcel_no = pn.dirty)
      - create index bseed_annual_inspections_address_idx on bseed.annual_inspections using btree(address)
- type: geocode
  table: bseed.annual_inspections
  add_col: address
  geom_col: geom
- type: sql
  statements:
      - create view bseed.annual_inspections_socrata as (select 
            address,
            replace(action_date::character varying, ' ', 'T') as action_date,
            action_description,
            result,
            case_number,
            parcel_assess,
            owner,
            project_name,
            case when geom is null then null else
                  concat(
                  'location (',
                  ST_Y(ST_Centroid(geom)), 
                  ',', 
                  ST_X(ST_Centroid(geom)),
                  ')'
                  ) 
                  end as location
            from bseed.annual_inspections)

# Building Permits
- type: sql
  statements:
      - drop view if exists bseed.bldg_permits_socrata cascade;
      - create view
            bseed.bldg_permits_socrata as
            ( select 
            permit_no,
            case when permit_issued is null then null else
                  concat(replace(permit_issued::text, ' ', 'T'), 'Z')
            end as permit_issued,
            case when permit_expire is null then null else
                  concat(replace(permit_expire::text, ' ', 'T'), 'Z')
            end as permit_expire,
            case when permit_completed is null then null else
                  concat(replace(permit_completed::text, ' ', 'T'), 'Z')
            end as permit_completed,
            permit_status,
            site_address,
            between1,
            pn.cleaned as parcel_no,
            case when pn.parcel_centroid is null then null else
                concat('location(', ST_Y(pn.parcel_centroid), ',', ST_X(pn.parcel_centroid), ')')
            end as site_location,
            lot_number,
            subdevision as subdivision,
            case_type,
            case_description,
            legal_use,
            case estimated_cost when 'NaN' then null else estimated_cost end,
            case parcel_size when 'NaN' then null else parcel_size end,
            parcel_cluster_sector,
            case stories when 'NaN' then null else stories end,
            case parcel_floor_area when 'NaN' then null else parcel_floor_area end,
            case parcel_ground_area when 'NaN' then null else parcel_ground_area end,
            prc_aka_address,
            bld_permit_type,
            bld_permit_desc,
            fdicn_description,
            bld_type_use,
            residential,
            bld_type_const_cod,
            bld_zoning_dist,
            bld_use_group,
            bld_basement,
            fee_type,
            csm_caseno,
            csf_created_by,
            seq_no,
            case pcf_amt_due when 'NaN' then null else pcf_amt_due end,
            owner_last_name,
            owner_first_name,
            owner_address1,
            owner_address2,
            owner_city,
            owner_state,
            owner_zip,
            contractor_last_name,
            contractor_first_name,
            contractor_address1,
            contractor_address2,
            contractor_city,
            contractor_stat,
            contractor_zip
            from bseed.bldg_permits
            inner join bseed.pnum_lookup pn on parcel_no = pn.dirty )
 
# # Dismantle Permits
- type: sql
  statements:
      - drop view if exists bseed.dismantle_permits_socrata cascade
      - create view 
            bseed.dismantle_permits_socrata as
            ( select
            concat_ws(ca.csa_id, '_', cm.prc_parcel_no) as unique_id,
            cm.prc_parcel_no,
            pn.cleaned as parcel_number,
            ca.csm_caseno,
            ca.case_type,
            ca.action_description,
            concat_ws(' ', cd.csm_st_nmbr, cd.csm_st_pfx, cd.csm_st_name) as street_address,
            case when ca.csa_date3 is null then null else
                  replace(to_char(ca.csa_date3::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T')
            end as csa_date3,
            ca.csa_disp,
            ca.csa_notes,
            ca.actn_menu_id,
            ca.actn_code,
            case when ca.csa_creation_date is null then null else
                  replace(to_char(ca.csa_creation_date::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T')
            end as csa_creation_date,
            case when ca.csa_date1 is null then null else
                  replace(to_char(ca.csa_date1::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T')
            end as csa_date1,
            case when ca.csa_date2 is null then null else
                  replace(to_char(ca.csa_date2::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T')
            end as csa_date2,
            case when ca.csa_updated is null then null else
                  replace(to_char(ca.csa_updated::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T')
            end as csa_updated,
            ca.csa_updated_by,
            ca.csa_assigned_to,
            ca.csa_done_by
            from bseed.tm_caseaction ca
            inner join bseed.tm_casemain cm on ca.csm_caseno = cm.csm_caseno
            inner join bseed.tm_caseaddress cd on ca.csm_caseno = cd.csm_caseno
            inner join bseed.pnum_lookup pn on cm.prc_parcel_no = pn.dirty
            where ca.csa_date3 > Date '2014-01-01'
            and ca.action_description in ('Final Grade Inspection', 'Open Hole Inspection ', 'Winter Grade Inspection'))

# # Trades Permits
- type: sql
  statements: 
   - drop table if exists bseed.trade_permits cascade
   - create table bseed.trade_permits as (
      select 
            permit_no,             
            permit_issued,        
            permit_expire,         
            permit_completed,      
            permit_status,         
            site_address,          
            between1,              
            parcel_no,             
            prc_lot,               
            prc_subdiv,            
            case_type,             
            case_description,      
            legal_use,             
            estimated_cost,        
            parcel_size,           
            parcel_cluster_sector, 
            stories,               
            parcel_floor_area,     
            parcel_ground_area,    
            prc_aka_address,       
            elv_type_of_work,              
            permit_description,    
            fdicn_description,     
            elv_type_of_use,               
            residential,           
            description,           
            elv_type_const_cod,    
            elv_zoning_dist,       
            elv_use_group,        
            elv_basement,          
            fee_type,              
            csm_caseno,            
            csf_created_by,        
            seq_no,                
            pcf_amt_due,           
            owner_name,            
            owner_address1,       
            contractor_last_name,  
            contractor_address1 
      from bseed.tm_elevator union all
      select
            permit_no,             
            permit_applied,        
            permit_expire,         
            permit_completed,      
            permit_status,         
            site_address,          
            between1,              
            parcel_no,             
            prc_lot,               
            prc_subdiv,            
            case_type,             
            case_description,      
            legal_use,             
            estimated_cost,        
            parcel_size,           
            parcel_cluster_sector, 
            stories,               
            parcel_floor_area,     
            parcel_ground_area,    
            prc_aka_address,       
            plm_work,              
            permit_description,    
            fdicn_description,     
            plm_use,               
            residential,           
            description,           
            plm_type_const_cod,    
            plm_zoning_dist,       
            plm_use_group,        
            plm_basement,          
            fee_type,              
            csm_caseno,            
            csf_created_by,        
            seq_no,                
            pcf_amt_due,           
            owner_name,            
            owner_address1,       
            contractor_last_name,  
            contractor_address1
      from bseed.tm_plumbing union all
      select
            permit_no,             
            permit_issued,        
            permit_expire,         
            permit_completed,      
            permit_status,         
            site_address,          
            between1,              
            parcel_no,             
            prc_lot,               
            prc_subdiv,            
            case_type,             
            case_description,      
            legal_use,             
            estimated_cost,        
            parcel_size,           
            parcel_cluster_sector, 
            stories,               
            parcel_floor_area,     
            parcel_ground_area,    
            prc_aka_address,       
            ele_type_work,              
            permit_description,    
            fdicn_description,     
            ele_type_use,               
            residential,           
            description,           
            ele_type_const_cod,    
            ele_zoning_dist,       
            ele_use_group,        
            ele_basement,          
            fee_type,              
            csm_caseno,            
            csf_created_by,        
            seq_no,                
            pcf_amt_due,           
            owner_name,            
            owner_address1,       
            contractor_last_name,  
            contractor_address1
      from bseed.tm_electrical union all
      select
            permit_no,             
            permit_issued,        
            permit_expire,         
            permit_completed,      
            permit_status,         
            site_address,          
            between1,              
            parcel_no,             
            prc_lot,               
            prc_subdiv,            
            case_type,             
            case_description,      
            legal_use,             
            estimated_cost,        
            parcel_size,           
            parcel_cluster_sector, 
            stories,               
            parcel_floor_area,     
            parcel_ground_area,    
            prc_aka_address,       
            bpv_type_work,              
            permit_description,    
            fdicn_description,     
            bpv_type_use,               
            residential,           
            description,           
            bpv_type_const_cod,    
            bpv_zoning_dist,       
            bpv_use_group,        
            bpv_basement,          
            fee_type,              
            csm_caseno,            
            csf_created_by,        
            seq_no,                
            pcf_amt_due,           
            concat_ws(' ', owner_first_name, owner_last_name),            
            owner_address1,       
            contractor_last_name,  
            contractor_address1
      from bseed.tm_boiler union all
      select
            permit_no,             
            permit_issued,        
            permit_expire,         
            permit_completed,      
            permit_status,         
            site_address,          
            between1,              
            parcel_no,             
            prc_lot,               
            prc_subdiv,            
            case_type,             
            case_description,      
            legal_use,             
            estimated_cost,        
            parcel_size,           
            parcel_cluster_sector, 
            stories,               
            parcel_floor_area,     
            parcel_ground_area,    
            prc_aka_address,       
            mec_work,              
            permit_description,    
            fdicn_description,     
            mec_use,               
            residential,           
            description,           
            mec_type_const_cod,    
            mec_zoning_dist,       
            mec_use_group,        
            mec_basement,          
            fee_type,              
            csm_caseno,            
            csf_created_by,        
            seq_no,                
            pcf_amt_due,           
            owner_name,            
            owner_address1,       
            contractor_last_name,  
            contractor_address1
      from bseed.tm_mechanical
      );
   - update bseed.trade_permits tp 
      set parcel_no = pl.cleaned
      from bseed.pnum_lookup pl
      where tp.parcel_no = pl.dirty
   - alter table bseed.trade_permits rename column elv_type_of_work to type_of_work;
   - alter table bseed.trade_permits rename column elv_type_of_use to type_of_use;
   - alter table bseed.trade_permits rename column elv_type_const_cod to type_const_cod;
   - alter table bseed.trade_permits rename column elv_zoning_dist to zoning_dist;
   - alter table bseed.trade_permits rename column elv_use_group to use_group;
   - alter table bseed.trade_permits rename column elv_basement to basement;
   - alter table bseed.trade_permits add column uniq serial primary key;
   - update bseed.trade_permits set 
      site_address = regexp_replace(site_address, '[\s]{2,}', ' '),
      owner_address1 = regexp_replace(owner_address1, '[\s]{2,}', ' '),
      contractor_address1 = regexp_replace(contractor_address1, '[\s]{2,}', ' ')
   - create index bseed_trade_permits_idx on bseed.trade_permits using btree(site_address)
- type: geocode
  table: bseed.trade_permits
  add_col: site_address
  geom_col: geom
- type: sql
  statements:
    - drop view if exists bseed.trades_permits_socrata cascade
    - create view bseed.trades_permits_socrata as 
        ( select uniq as unique_id, 
                permit_no as permit_no,
                replace(to_char(permit_issued::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as permit_issued, 
                replace(to_char(permit_expire::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as permit_expire,
                replace(to_char(permit_completed::timestamp, 'YYYY-MM-DD HH24:MI:SS'), ' ', 'T') as permit_completed, 
                permit_status as permit_status, 
                site_address as site_address, 
                between1 as between1, 
                prc_lot as prc_lot, 
                prc_subdiv as prc_subdiv, 
                case_type as case_type, 
                case_description as case_description, 
                type_of_use as type_of_use, 
                description as type_use_desc, 
                type_of_work as permit_type, 
                permit_description as permit_type_desc, 
                fdicn_description as fdicn_description, 
                fee_type as fee_type, 
                CASE parcel_size 
                  WHEN 'NaN' THEN null 
                  ELSE parcel_size 
                END as parcel_size, 
                parcel_cluster_sector as parcel_cluster_sector, 
                CASE parcel_floor_area 
                  WHEN 'NaN' THEN null 
                  ELSE parcel_floor_area 
                END as parcel_floor_area, 
                CASE parcel_ground_area 
                  WHEN 'NaN' THEN null 
                  ELSE parcel_ground_area 
                END as parcel_ground_area, 
                prc_aka_address as prc_aka_address, 
                seq_no as seq_no, 
                pcf_amt_due as pcf_amt_due, 
                owner_name as owner_name, 
                owner_address1 as owner_address, 
                contractor_last_name as contractor_name, 
                contractor_address1 as contractor_address, 
                CASE   
                  WHEN geom is null 
                  THEN null   
                ELSE concat('location (', ST_Y(geom), ',', ST_X(geom), ')') END as location 
             from bseed.trade_permits )