# Add geometry and make a point for new incidents
- type: sql
  statements:
    - alter table pubsafe.rms_update rename column "Address" to address
    - alter table pubsafe.rms_update rename column "DPDCRIMEID" to dpdcrimeid
    - alter table pubsafe.rms_update add column uniq serial primary key
    - select AddGeometryColumn('pubsafe', 'rms_update', 'geom', 2898, 'POINT', 2)
    - create index if not exists etl_rms_update_geom_idx on pubsafe.rms_update using gist(geom)
    - create index if not exists rms_update_dpdcrimeid_idx on pubsafe.rms_update using btree(dpdcrimeid)
    - create index if not exists rms_dpdcrimeid_idx on pubsafe.rms using btree(dpdcrimeid)
    - create index if not exists rms_update_addr_idx on pubsafe.rms_update using btree(address)
    - update pubsafe.rms_update set geom = st_setsrid(st_makepoint(geox/100, geoy/100), 2898) 
        where geox > 0 and geoy > 0 and dpdcrimeid not in (select dpdcrimeid from pubsafe.rms)

# Stamp with District/Neighborhood/Block/ZipCode
- type: sql
  statements:
    - alter table pubsafe.rms_update add column block_id varchar(50);
    - update pubsafe.rms_update r set block_id = b.geoid10 from base.blocks_2010 b where st_contains(b.geom, r.geom);
    - alter table pubsafe.rms_update add column neighborhood varchar(100);
    - update pubsafe.rms_update r set neighborhood = n.name from base.neighborhoods n where st_contains(n.wkb_geometry, r.geom);
    - alter table pubsafe.rms_update add column council_district integer;
    - update pubsafe.rms_update r set council_district = d.districts::integer from base.council_districts d where st_contains(d.wkb_geometry, r.geom);
    - alter table pubsafe.rms_update add column if not exists zip_code varchar(10);
    - update pubsafe.rms_update r set zip_code = z.zipcode from base.zip_codes z where st_contains(z.wkb_geometry, r.geom);

# Fuzz geometry for new incidents
- type: anonymize_geometry
  table: pubsafe.rms_update
  against: base.centerline

# Pull over previously anonymized geometry & stamped fields
- type: sql
  statements:
    - update pubsafe.rms_update u set
        geom = r.geom,
        block_id = r.block_id,
        neighborhood = r.neighborhood,
        council_district = r.council_district
        from pubsafe.rms r
        where r.dpdcrimeid = u.dpdcrimeid
        and u.dpdcrimeid in (select dpdcrimeid from pubsafe.rms)
    - create index if not exists rms_update_address_idx on pubsafe.rms_update using btree(address)

# Fuzz text location
- type: anonymize_text_location
  table: pubsafe.rms_update
  column: address
  set_flag: False

- type: sql
  statements:
    - update pubsafe.rms_update set "Offense Description" = 'OPERATING UNDER THE INFLUENCE OF LIQUOR OR DRUGS' where "Offense Description" = 'OUIL'
    - drop table if exists pubsafe.rms_old cascade
    - alter table pubsafe.rms rename to rms_old
    - alter table pubsafe.rms_update rename to rms
    # Now we create 2 views off of "rms"
    - drop view if exists pubsafe.rms_socrata_private
    - drop view if exists pubsafe.rms_socrata_public
    - create view pubsafe.rms_socrata_private as (
      select
        uniq,
        dpdcrimeid::text as crime_id,
        "Report Number" as report_number,
        address,
        "Offense Description" as offense_description,
        "Offense Category" as offense_category,
        "State Offense Code" as state_offense_code,
        trim(arr_chrg) as arrest_charge,
        chrgdesc as charge_description,
        replace(to_char(concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as incident_timestamp,
        "Incident Time" as incident_time,
        (extract(dow from concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp) + 1)::integer as day_of_week,
        left("Incident Time", 2)::integer as hour_of_day,
        right("Incident Date", 4)::integer as year,
        "Scout Car Area" as scout_car_area,
        "Precinct" as precinct,
        block_id,
        neighborhood,
        council_district,
        zip_code,
        ST_X(ST_Transform(geom, 4326)) as longitude,
        ST_Y(ST_Transform(geom, 4326)) as latitude,
        replace(to_char(ibr_date::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as ibr_date,
        CASE
          WHEN geom is null
            THEN null
          ELSE
            concat(
              'location (',
              ST_Y(ST_Transform(geom, 4326)),
              ',',
              ST_X(ST_Transform(geom, 4326)),
              ')'
            )
        END as location from pubsafe.rms)
    - create view pubsafe.rms_socrata_public as (
      select
        uniq,
        dpdcrimeid::text as crime_id,
        "Report Number" as report_number,
        address,
        "Offense Description" as offense_description,
        "Offense Category" as offense_category,
        "State Offense Code" as state_offense_code,
        trim(arr_chrg) as arrest_charge,
        chrgdesc as charge_description,
        replace(to_char(concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as incident_timestamp,
        "Incident Time" as incident_time,
        (extract(dow from concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp) + 1)::integer as day_of_week,
        left("Incident Time", 2)::integer as hour_of_day,
        right("Incident Date", 4)::integer as year,
        "Scout Car Area" as scout_car_area,
        "Precinct" as precinct,
        block_id,
        neighborhood,
        council_district,
        zip_code,
        ST_X(ST_Transform(geom, 4326)) as longitude,
        ST_Y(ST_Transform(geom, 4326)) as latitude,
        replace(to_char(ibr_date::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as ibr_date,
        CASE
          WHEN geom is null
            THEN null
          ELSE
            concat(
              'location (',
              ST_Y(ST_Transform(geom, 4326)),
              ',',
              ST_X(ST_Transform(geom, 4326)),
              ')'
            )
        END as location from pubsafe.rms where ibr_date is not null)
    - drop view if exists pubsafe.rms_ago
    - create view pubsafe.rms_ago as (
      select 
        dpdcrimeid::text as crime_id,
        "Report Number" as report_number,
        address,
        "Offense Description" as offense_description,
        "Offense Category" as offense_category,
        "State Offense Code" as state_offense_code,
        trim(arr_chrg) as arrest_charge,
        chrgdesc as charge_description,
        replace(to_char(concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as incident_timestamp,
        "Incident Time" as incident_time,
        (extract(dow from concat("Incident Date", ' ', left("Incident Time", 2), ':', right("Incident Time", 2), '\:00')::timestamp) + 1)::integer as day_of_week,
        left("Incident Time", 2)::integer as hour_of_day,
        right("Incident Date", 4)::integer as year,
        "Scout Car Area" as scout_car_area,
        "Precinct" as precinct,
        block_id,
        neighborhood,
        council_district,
        zip_code,
        ST_X(ST_Transform(geom, 4326)) as longitude,
        ST_Y(ST_Transform(geom, 4326)) as latitude,
        replace(to_char(ibr_date::timestamp, 'YYYY-MM-DD HH24:MI:SS.000'), ' ', 'T') as ibr_date, 
        CASE
          WHEN geom is null
            THEN null
          ELSE
            ST_Transform(geom, 4326)
        END as geom
        from pubsafe.rms 
          where ibr_date is not null
          and "Incident Date"::date > (current_date - interval '90 days')
        )
