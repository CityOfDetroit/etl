- type: sql
  statements:
    - drop view if exists assessor.parcel_points
    - create view assessor.parcel_points as 
        (select
          s.objectid,
          d.ward,
          s.parcelno as parcelnum, 
          d.propaddr as address,   
          d.council as council_district,
          a.propzip as zip_code,
          a.ownername1 as owner1,
          a.ownername2 as owner2,
          a.taxpayname as taxpayer,
          a.ownerstreetaddr as owner_street,
          a.ownercity as owner_city ,
          a.ownerstate as owner_state,
          a.ownerzip as owner_zip,
          a.ownercountry as owner_country,
          d."propclass" as property_class,
          d.taxstatus as taxable_status,
          d.totalsqft::integer as sqft,
          d.totalacreage::double precision as total_acres,
          d.frontage::integer as frontage,
          d."depth"::integer as "depth",
          d.pre::integer as pre,
          d.nez,
          coalesce(case a.cib_yearbuilt when 0 then null else a.cib_yearbuilt end, a.resb_yearbuilt)::integer as year_built,
          coalesce(case a.cib_floorarea when 0 then null else a.cib_floorarea end, a.resb_floorarea)::integer as floor_area,
          coalesce(case a.cib_numcib when 0 then null else a.cib_numcib end, a.resb_numresb::int)::integer as num_buildings,
          a.resb_style as building_style,
          a."lastSalePrice"::integer as last_sale_price,
          replace(a."lastSaleDate"::varchar, ' ', 'T') as last_sale_date,
          a."lastTermsOfSale" as last_terms_of_sale,
          d.av::integer as sev,
          d.tv::integer as taxable_value,
          d.landvalue::integer as land_value,
          d.bldgav::integer as improved_value,
          d.landmap,
          d.related as related_parcel,
          z.zoning_rev as zoning,
          st_x(st_centroid(st_transform(s.shape, 4326))) as longitude,
          st_y(st_centroid(st_transform(s.shape, 4326))) as latitude,
          concat('location(', st_y(st_centroid(st_transform(s.shape, 4326))), ',', st_x(st_centroid(st_transform(s.shape, 4326))), ')') as location,
          d.legaldesc as legaldesc
        from assessor.parcels_102717 s
          inner join assessor.parcelmaster a
          on a.pnum = s.parcelno
          inner join assessor.parcel_data_18c d
          on d.parcelno = s.parcelno
          inner join assessor.zoning z
          on s.parcelno = z.parcelno);
    - drop view if exists assessor.parcel_map
    - create view assessor.parcel_map as 
        (select
          s.objectid,
          d.ward,
          s.parcelno as parcelnum, 
          d.propaddr as address,   
          d.council as council_district,
          a.propzip as zip_code,
          a.ownername1 as owner1,
          a.ownername2 as owner2,
          a.taxpayname as taxpayer,
          a.ownerstreetaddr as owner_street,
          a.ownercity as owner_city ,
          a.ownerstate as owner_state,
          a.ownerzip as owner_zip,
          a.ownercountry as owner_country,
          d."propclass" as property_class,
          d.taxstatus as taxable_status,
          d.totalsqft::integer as sqft,
          d.totalacreage::double precision as total_acres,
          d.frontage::integer as frontage,
          d."depth"::integer as "depth",
          d.pre::integer as pre,
          d.nez,
          coalesce(case a.cib_yearbuilt when 0 then null else a.cib_yearbuilt end, a.resb_yearbuilt)::integer as year_built,
          coalesce(case a.cib_floorarea when 0 then null else a.cib_floorarea end, a.resb_floorarea)::integer as floor_area,
          coalesce(case a.cib_numcib when 0 then null else a.cib_numcib end, a.resb_numresb::int)::integer as num_buildings,
          a.resb_style as building_style,
          a."lastSalePrice"::integer as last_sale_price,
          replace(a."lastSaleDate"::varchar, ' ', 'T') as last_sale_date,
          a."lastTermsOfSale" as last_terms_of_sale,
          d.av::integer as sev,
          d.tv::integer as taxable_value,
          d.landvalue::integer as land_value,
          d.bldgav::integer as improved_value,
          d.landmap,
          d.related as related_parcel,
          z.zoning_rev as zoning,
          st_transform(s.shape, 4326) as geom,
          d.legaldesc as legaldesc
        from assessor.parcels_102717 s
          inner join assessor.parcelmaster a
          on a.pnum = s.parcelno
          inner join assessor.parcel_data_18c d
          on d.parcelno = s.parcelno
          inner join assessor.zoning z
          on s.parcelno = z.parcelno);
    # - drop view if exists assessor.parcels_accela;
    # - >- 
    #   create view assessor.parcels_accela as (
    #   select
    #     s.objectid,
    #     d.ward,-- WARD
    #     s.parcelno as parcelnumber, -- PARCELNUMBER
    #     d.district,   -- DISTRICT
    #     d.ecf,    -- ECF
    #     d.propaddr as propaddress,    -- PROPADDRESS
    #     d.propno::integer as "number",    -- NUMBER
    #     d.propdir as dir,   -- DIR
    #     d.propstr as street, -- STREET
    #     a.propzip as zipcode,   -- ZIPCODE
    #     a.ownername1 as taxpayername1,    -- TAXPAYERNAME1
    #     a.ownername2 as taxpayername2,   -- TAXPAYERNAME2
    #     a.ownerstreetaddr as taxpayeraddress,   -- TAYPAYERADDRESS
    #     a.ownercity as taxpayercity ,  -- CITY
    #     a.ownerstate as taxpayerstate,   -- STATE
    #     a.ownerzip as taxpayerzip,    -- ZIPCODE
    #     d."propclass" as "class",  -- CLASS
    #     d.prevpclass as previous,   -- PREVIOUS
    #     'Active' as status,   -- STATUS
    #     d.taxstatus as taxablestatus,    -- TAXABLESTATUS
    #     d.totalsqft::integer as sqft,    -- SQ. Ft.
    #     d.totalacreage as acreage,    -- ACREAGE
    #     d.frontage::integer as frontage,   -- FRONTAGE
    #     d."depth"::integer as "depth",  -- DEPTH
    #     d.usecode as usecode,    -- USECODE
    #     d.pre::integer as homestead,    -- HOMESTEADE
    #     d.nez,   -- NEZ
    #     a."xStreetName_0" as xstreetname1,   -- XSTREETNAME1
    #     a."xStreetName_1" as xstreetname2,    -- XSTREETNAME2
    #     a.relatedpnum as relatedparcel,    -- RELATEDPARCEL
    #     a.cib_floorarea as cifloorarea,    -- CIFLOORAREA
    #     a.cib_numcib as cibuildingno,    -- CIBUILDINGNO
    #     a.cib_occ as cioccupancy,    -- CIOCCUPANCY
    #     a.cib_yearbuilt as ciyearbuilt,  -- CIYEARBUILT
    #     a.resb_floorarea as resfloorarea,   -- RESFLOORAREA
    #     a.resb_numresb as resbuildingno,   -- RESBUILDINGNO
    #     a.resb_occ as resoccupancty,   -- RESOCCUPANCY
    #     a.resb_style as resbuildingstyle,   -- RESBUILDINGSTYLE
    #     a.resb_yearbuilt as resyearbuilt,   -- RESYEARBUILT
    #     a.vacant,    -- VACANT
    #     a."lastSalePrice" as lastsaleamount,   -- LASTSALEAMOUNT
    #     a."lastSaleDate" as lastsaledate,   -- LASTSALEDATE
    #     d.av::integer as assessedvalue,   -- ASSESSEDVALUE
    #     d.prevav::integer as prevassessvalue,    -- PREVASSESSVALUE
    #     d.sev::integer,   -- SEV
    #     d.prevav::integer as prevsev,    -- PREVSEV
    #     d.tv::integer as taxablevalue,   -- TAXABLEVALUE
    #     d.prevtv::integer as prevtaxablevalue,    -- PREVTAXABLEVALUE
    #     d.landvalue::integer as landvalue,    -- LANDVALUE
    #     d.landmap,   -- LANDMAP
    #     d.aka as akaaddress,   -- AKAADDRESS
    #     d.subdivision,    -- SUBDIVISION
    #     a.lot as lotnumber,   -- LOTNUMBER
    #     d.legaldesc as legaldescription,    -- LEGALDESCRIPTION
    #     d.rp,  -- RP
    #     s.shape as geom
    #   from assessor.parcels_102717 s
    #     inner join assessor.parcelmaster a
    #     on a.pnum = s.parcelno
    #     inner join assessor.parcel_data_18c d
    #     on d.parcelno = s.parcelno
    #    )
    - drop view if exists assessor.open_data_parcels;
    - >- 
      create view assessor.open_data_parcels as (
      select
        s.objectid,
        d.ward,-- WARD
        s.parcelno as parcelnumber, -- PARCELNUMBER
        d.district,   -- DISTRICT
        d.ecf,    -- ECF
        d.propaddr as propaddress,    -- PROPADDRESS
        d.propno::integer as "number",    -- NUMBER
        d.propdir as dir,   -- DIR
        d.propstr as street, -- STREET
        a.propzip as zipcode,   -- ZIPCODE
        a.ownername1 as taxpayername1,    -- TAXPAYERNAME1
        a.ownername2 as taxpayername2,   -- TAXPAYERNAME2
        a.ownerstreetaddr as taxpayeraddress,   -- TAYPAYERADDRESS
        a.ownercity as taxpayercity ,  -- CITY
        a.ownerstate as taxpayerstate,   -- STATE
        a.ownerzip as taxpayerzip,    -- ZIPCODE
        d."propclass" as "class",  -- CLASS
        d.prevpclass as previous,   -- PREVIOUS
        'Active' as status,   -- STATUS
        d.taxstatus as taxablestatus,    -- TAXABLESTATUS
        d.totalsqft::integer as sqft,    -- SQ. Ft.
        d.totalacreage as acreage,    -- ACREAGE
        d.frontage::integer as frontage,   -- FRONTAGE
        d."depth"::integer as "depth",  -- DEPTH
        d.usecode as usecode,    -- USECODE
        d.pre::integer as homestead,    -- HOMESTEADE
        d.nez,   -- NEZ
        a."xStreetName_0" as xstreetname1,   -- XSTREETNAME1
        a."xStreetName_1" as xstreetname2,    -- XSTREETNAME2
        a.relatedpnum as relatedparcel,    -- RELATEDPARCEL
        a.cib_floorarea as cifloorarea,    -- CIFLOORAREA
        a.cib_numcib as cibuildingno,    -- CIBUILDINGNO
        a.cib_occ as cioccupancy,    -- CIOCCUPANCY
        a.cib_yearbuilt as ciyearbuilt,  -- CIYEARBUILT
        a.resb_floorarea as resfloorarea,   -- RESFLOORAREA
        a.resb_numresb as resbuildingno,   -- RESBUILDINGNO
        a.resb_occ as resoccupancty,   -- RESOCCUPANCY
        a.resb_style as resbuildingstyle,   -- RESBUILDINGSTYLE
        a.resb_yearbuilt as resyearbuilt,   -- RESYEARBUILT
        a.vacant,    -- VACANT
        a."lastSalePrice" as lastsaleamount,   -- LASTSALEAMOUNT
        a."lastSaleDate" as lastsaledate,   -- LASTSALEDATE
        d.av::integer as assessedvalue,   -- ASSESSEDVALUE
        d.prevav::integer as prevassessvalue,    -- PREVASSESSVALUE
        d.sev::integer,   -- SEV
        d.prevav::integer as prevsev,    -- PREVSEV
        d.tv::integer as taxablevalue,   -- TAXABLEVALUE
        d.prevtv::integer as prevtaxablevalue,    -- PREVTAXABLEVALUE
        d.landvalue::integer as landvalue,    -- LANDVALUE
        d.landmap,   -- LANDMAP
        d.aka as akaaddress,   -- AKAADDRESS
        d.subdivision,    -- SUBDIVISION
        a.lot as lotnumber,   -- LOTNUMBER
        d.legaldesc as legaldescription,    -- LEGALDESCRIPTION
        d.rp,  -- RP
        z.zoning_rev as zoning_code,
        s.shape as geom
      from assessor.parcels_102717 s
        inner join assessor.parcelmaster a
        on a.pnum = s.parcelno
        inner join assessor.parcel_data_18c d
        on d.parcelno = s.parcelno
        inner join assessor.zoning z
        on s.parcelno = z.parcelno
       )
    - drop view if exists assessor.sales_history_socrata cascade
    - create view assessor.sales_history_socrata as (
        select
         id,
         addresscombined as address,
         pnum as parcel_no,
         replace(saledate::text, ' ', 'T') as sale_date,
         saleprice as sale_price,
         terms,
         instr as instrument,
         grantor,
         grantee,
         concat(
           'location(',
           st_y(st_centroid(st_transform(pa.shape, 4326))),
           ',',
           st_x(st_centroid(st_transform(pa.shape, 4326))),
           ')') as location,
         salenum as sale_number
         from assessor.sales sa
         inner join assessor.parcels_102717 pa on sa.pnum = pa.parcelno);
  