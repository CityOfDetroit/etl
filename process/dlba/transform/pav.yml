- type: create_table
  table_name: pav_res
  as: select
    'Residential' as type,
    now() as posted_datetime,
    c.address,
    c.parcel_id,
    c.demo_rfp_group as rfp_number,
    c.asb_abatement_verification_contractor as contractor,
    c.asb_post_abatement_passed_date as passed_date,
    c.asb_post_abatement_verification_status as status,
    '' as public_access_url
  from dlba.case c

- type: create_table
  table_name: pav_comm
  as: select
    'Commercial' as type,
    now() as posted_datetime,
    d.dba_com_property_name as address,
    d.dba_com_property_parcel_id as parcel_id,
    d.demo_rfp_number as rfp_number,
    d.asb_verification_contractor as contractor,
    d.asb_post_abatement_passed_date as passed_date,
    d.asb_post_abatement_verification_status as status,
    '' as public_access_url
  from dlba.dba_commercial_demo d
  where d.dba_com_property_parcel_id is not null

# on first run, create table that unions pav_res and pav_comm
- type: create_table
  table_name: pav_union 
  as: 

# on daily runs, insert new rows into pav_union to preserve posted_datetime. check uniqueness?
- type: sql
  statements: